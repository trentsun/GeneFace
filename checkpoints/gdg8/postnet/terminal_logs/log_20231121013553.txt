| Copied codes to checkpoints/gdg8/postnet\codes\20231121013553.
| model Arch:  CNNPostNet(
  (block1): Sequential(
    (0): Conv1d(
      (conv_block): Sequential(
        (0): Conv1d(204, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (act): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (1): Conv1d(
      (conv_block): Sequential(
        (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (act): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (2): Conv1d(
      (conv_block): Sequential(
        (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (act): LeakyReLU(negative_slope=0.2, inplace=True)
    )
  )
  (block2): Sequential(
    (0): Conv1d(
      (conv_block): Sequential(
        (0): Conv1d(128, 256, kernel_size=(3,), stride=(1,), padding=(1,))
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (act): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (1): Conv1d(
      (conv_block): Sequential(
        (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (act): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (2): Conv1d(
      (conv_block): Sequential(
        (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (act): LeakyReLU(negative_slope=0.2, inplace=True)
    )
  )
  (block3): Sequential(
    (0): Conv1d(
      (conv_block): Sequential(
        (0): Conv1d(256, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (act): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (1): Conv1d(128, 204, kernel_size=(1,), stride=(1,))
  )
)
| model Trainable Parameters: 0.797M
[]
hparams load_db
{'binary_data_dir': 'data/binary/lrs3', 'work_dir': 'checkpoints/gdg8/postnet', 'load_ckpt': '', 'tb_log_interval': 100, 'gen_dir_name': '', 'save_gt': True, 'num_ckpt_keep': 500, 'val_check_interval': 1000, 'valid_infer_interval': 1000, 'max_updates': 20000, 'seed': 9999, 'lr': 0.0005, 'scheduler': 'none', 'warmup_updates': 1000, 'optimizer_adam_beta1': 0.9, 'optimizer_adam_beta2': 0.999, 'weight_decay': 0, 'accumulate_grad_batches': 1, 'clip_grad_norm': 1, 'clip_grad_value': 0, 'num_sanity_val_steps': 5, 'num_valid_plots': 1, 'eval_max_batches': 10, 'print_nan_grads': False, 'resume_from_checkpoint': 0, 'amp': False, 'valid_monitor_key': 'val_loss', 'valid_monitor_mode': 'min', 'save_best': False, 'debug': False, 'save_codes': ['tasks', 'modules', 'egs'], 'hidden_size': 256, 'infer_audio_source_name': 'data/raw/val_wavs/zozo.wav', 'infer_out_npy_name': 'infer_out/May/pred_lm3d/zozo.npy', 'infer_ckpt_steps': 4000, 'load_db_to_memory': True, 'base_config': ['egs/egs_bases/postnet/base.yaml'], 'task_cls': 'tasks.postnet.lm3d_postnet_adv_sync.PostnetAdvSyncTask', 'lambda_kl': 0.5, 'syncnet_work_dir': 'checkpoints/lrs3/syncnet', 'syncnet_ckpt_steps': 40000, 'audio2motion_task_cls': 'tasks.audio2motion.lm3d_vae_sync.VAESyncAudio2MotionTask', 'person_binary_data_dir': 'data/binary/videos', 'postnet_lr': 0.0001, 'postnet_lambda_adv': 0.85, 'postnet_lambda_sync': 0.1, 'postnet_lambda_mse': 0.05, 'postnet_disc_lr': 0.0001, 'discriminator_scheduler_params': {'gamma': 0.5, 'step_size': 40000}, 'postnet_disc_start_steps': 0, 'postnet_disc_interval': 1, 'audio2motion_work_dir': 'checkpoints/lrs3/lm3d_vae_sync/', 'audio2motion_ckpt_steps': 40000, 'video_id': 'gdg8', 'infer': False, 'validate': False, 'exp_name': 'gdg8/postnet'}
